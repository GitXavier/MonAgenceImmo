security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  encoders:
    App\Entity\User:
      algorithm: bcrypt
      cost: 12

  providers:
    from_database:
      entity:
        class: App\Entity\User
        property: username



  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      anonymous: true
      provider: from_database
      form_login:
        login_path: login
        check_path: login


      logout:
        path:   /logout
        target: /

  role_hierarchy:
    ROLE_CLIENT:      ROLE_USER
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN]

  access_control:
    - { path: '^/admin', roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN] }
    - { path: '^/admin/users', roles: ROLE_SUPER_ADMIN }
    - { path: '^/admin', roles: ROLE_ADMIN }
    - { path: '^/profile', roles: ROLE_USER }

    #provider: users_in_memory

    # activate different ways to authenticate
    #http_basic: true
    # https://symfony.com/doc/current/security.html#firewalls-authentication




    # https://symfony.com/doc/current/security/impersonating_user.html
  # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used






